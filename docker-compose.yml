# docker-compose.yml

services:
  postgres:
    image: postgres:17.5
    container_name: jm-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-justmedia}
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d justmedia"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: jm-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: jm-minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-miniopassword}
    ports:
      - "9000:9000" # API port
      - "9001:9001" # Console port
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: jm-transmission
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - TRANSMISSION_WEB_HOME=/combustion-release/ # Более современный UI
    # - USER=username # Опционально, для защиты
    # - PASS=password # Опционально, для защиты
    volumes:
      - ./transmission/config:/config
      - ./transmission/downloads:/downloads # Папка, куда будут скачиваться торренты
      - ./transmission/watch:/watch # Папка для .torrent файлов
    ports:
      - 9091:9091 # RPC API
      - 51413:51413 # Входящие peer-соединения
      - 51413:51413/udp
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  minio_data: