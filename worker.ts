// worker.ts - –û–∂–∏–¥–∞–µ—Ç —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞ –≤ –°–ø—Ä–∏–Ω—Ç–µ 3

import { Worker } from 'bullmq'
import { runtimeConfig } from './config'

const redisConfig = runtimeConfig.redis
const connection = { host: redisConfig.host, port: redisConfig.port }

// –ü—Ä–æ—Å—Ç–æ —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π –≤–æ—Ä–∫–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç,
// —á—Ç–æ–±—ã —Å–∫—Ä–∏–ø—Ç `npm run worker` –Ω–µ –ø–∞–¥–∞–ª —Å –æ—à–∏–±–∫–æ–π.
// –ú—ã –¥–æ–±–∞–≤–∏–º —Ä–µ–∞–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É –≤ –ö–æ–º–º–∏—Ç–µ 3.1.
const processMediaWorker = new Worker('process-media-job', async (job) => {
    console.log(`[Worker Stub] –ü–æ–ª—É—á–µ–Ω–∞ –∑–∞–¥–∞—á–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–µ–¥–∏–∞, –Ω–æ –ª–æ–≥–∏–∫–∞ –µ—â–µ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞. AssetId: ${job.data.assetId}`);
    // –ò–º–∏—Ç–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã
    await new Promise(resolve => setTimeout(resolve, 2000));
    console.log(`[Worker Stub] –ó–∞–¥–∞—á–∞ ${job.id} '–∑–∞–≤–µ—Ä—à–µ–Ω–∞'.`);
}, { connection });

processMediaWorker.on('completed', job => console.log(`[Queue] –ó–∞–≤–µ—Ä—à–µ–Ω–æ: –∑–∞–¥–∞—á–∞ ${job.id} —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.`));
processMediaWorker.on('failed', (job, err) => console.error(`[Queue] –û—à–∏–±–∫–∞: –∑–∞–¥–∞—á–∞ ${job?.id} –ø—Ä–æ–≤–∞–ª–µ–Ω–∞ —Å –æ—à–∏–±–∫–æ–π: ${err.message}`));

console.log('üöÄ –í–æ—Ä–∫–µ—Ä (–≤ —Ä–µ–∂–∏–º–µ –∑–∞–≥–ª—É—à–∫–∏) –∑–∞–ø—É—â–µ–Ω...');